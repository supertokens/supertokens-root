#!/bin/bash
# check if we need to merge master into this branch------------
if [[ $(git log origin/master ^HEAD) ]]; then
    echo "You need to merge master into this branch. Exiting"
    exit 1
fi

# Verify java version
REQUIRED_JAVA_VERSION="15.0.1"
JAVA_VERSION=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}')

if [[ "$JAVA_VERSION" == "$REQUIRED_JAVA_VERSION" ]]; then
    echo "Correct Java version ($REQUIRED_JAVA_VERSION) is installed."
else
    echo "Error: Java version $REQUIRED_JAVA_VERSION is required, but version $JAVA_VERSION is installed."
    exit 1
fi

# get version------------
version=`cat build.gradle | grep -e "version =" -e "version="`

while IFS='"' read -ra ADDR; do
	counter=0
	for i in "${ADDR[@]}"; do
		if [ $counter == 1 ]
		then
			version=$i
  		fi
  		counter=$(($counter+1))
	done
done <<< "$version"

branch_name="$(git symbolic-ref HEAD 2>/dev/null)" ||
branch_name="(unnamed branch)"     # detached HEAD

branch_name=${branch_name##refs/heads/}

# check if branch is correct based on the version-----------

if ! [[ $version == $branch_name* ]]
then
	RED='\033[0;31m'
    NC='\033[0m' # No Color
    printf "${RED}Adding tag to wrong branch. Stopping process${NC}\n"
    exit 1
fi



git fetch --prune --prune-tags

# get current commit hash------------
if [ $# -eq 0 ]
then
	commit_hash=`git log --pretty=format:'%H' -n 1`
else
	commit_hash=$1
fi


# check if current commit already has a tag or not------------

if [[ `git tag -l --points-at $commit_hash` == "" ]]
then
	continue=1
else
	RED='\033[0;31m'
	NC='\033[0m'
	printf "${RED}This commit already has a tag. Please remove that and re-run this script${NC}\n"
	echo "git tag --delete <tagName>"
	echo "git push --delete origin <tagName>"
	exit 1
fi


# check if release version of this tag exists------------

if git rev-parse v$version >/dev/null 2>&1
then
    RED='\033[0;31m'
    NC='\033[0m'
    printf "${RED}The released version of this tag already exists${NC}\n"
    exit 1
fi

# add an empty commit if the user has not given a commit hash so that we are sure it's built------------
if [ $# -eq 0 ]
then
    ./runBuild
    if [[ $? -ne 0 ]]
    then
        echo "Failed to build"
        exit 1
    fi

    # We have to do git add twice like this other jar changes in ./jar/* do not get added
    git add --all "./jar/*" > /dev/null 2>&1
    git add --all "./**/jar/*" > /dev/null 2>&1
    git commit --allow-empty -m"adding dev-v$version tag to this commit to ensure building"
    git push
	commit_hash=`git log --pretty=format:'%H' -n 1`
fi

# tag this commit and push it------------

git tag dev-v$version $commit_hash

git push --tags

echo "Added dev tag. PLEASE BE SURE TO CHECK THAT THE LATEST JARS HAVE BEEN COMMITTED!"
