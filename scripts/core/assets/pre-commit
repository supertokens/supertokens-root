#!/bin/bash
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# get current version----------

version=`cat build.gradle | grep -e "version =" -e "version="`

while IFS='"' read -ra ADDR; do
	counter=0
	for i in "${ADDR[@]}"; do
		if [ $counter == 1 ]
		then
			version=$i
  		fi
  		counter=$(($counter+1))
	done
done <<< "$version"


# get git branch name-----------

branch_name="$(git symbolic-ref HEAD 2>/dev/null)" ||
branch_name="(unnamed branch)"     # detached HEAD

branch_name=${branch_name##refs/heads/}


# check if branch is correct based on the version-----------

if [ $branch_name == "master" ]
then
	printf "${YELLOW}Committing to MASTER${NC}\n"
elif [[ $version == $branch_name* ]]
then
	continue=1
elif ! [[ $branch_name =~ ^[0-9]+.[0-9]+$ ]]
then
  printf "${YELLOW}Not committing to master or version branches${NC}\n"
else
  printf "${RED}Pushing to wrong branch. Stopping commit${NC}\n"
	exit 1
fi

(cd ../../ && ./gradlew editorconfigCheck < /dev/null)
if [[ $? -ne 0 ]]
then
  printf "${RED}Linting FAILED, please run './gradlew editorconfigFormat' in supertokens-root or the 'Lint' run configuration in IntelliJ IDEA${NC}\n"
	exit 1
fi

./runBuild

if [[ $? -ne 0 ]]
then
    printf "${RED}Build FAILED${NC}"
	exit 1
fi

# We have to do git restore twice like this other jar changes in ./jar/* do not get reset
# We also have to maintain this order since in some projects ./**/jar/ does not exist
git restore "./**/jar/*" > /dev/null 2>&1
git restore "./jar/*" > /dev/null 2>&1
